{"version":3,"sources":["vue-notifications.es5.js"],"names":["root","factory","define","amd","exports","module","VueNotifications","this","showInConsole","msg","type","types","error","console","warn","success","info","log","showDefaultMessage","_ref","message","title","debugMsg","TYPE","getValues","vueApp","config","result","Object","keys","forEach","field","call","showMessage","options","Promise","resolve","reject","valuesObj","isMethodOverridden","method","PLUGIN_NAME","PROPERTY_NAME","MESSAGES","alreadyInstalled","propertyName","timeout","installed","show","_this","newConfig","assign","then","resp","dismiss","install","Vue","arguments","length","undefined","window","use"],"mappings":"CAAE,SAASA,EAAMC,GACO,kBAAXC,SAAyBA,OAAOC,IACzCD,UAAWD,GACiB,gBAAZG,SAChBC,OAAOD,QAAUH,IAEjBD,EAAKM,iBAAmBL,KAE1BM,KAAM,WACR,YAgBA,SAASC,GAAcC,EAAKC,EAAMC,GAC5BD,IAASC,EAAMC,MAAOC,QAAQD,MAAMH,GAAcC,IAASC,EAAMG,KAAMD,QAAQC,KAAKL,GAAcC,IAASC,EAAMI,QAASF,QAAQG,KAAKP,GAAUI,QAAQI,IAAIR,GAGnK,QAASS,GAAmBC,GAC1B,GAAIT,GAAOS,EAAKT,KACZU,EAAUD,EAAKC,QACfC,EAAQF,EAAKE,MACbC,EAAWH,EAAKG,SAEhBb,EAAM,UAAYY,EAAQ,cAAgBD,EAAU,eAAiBE,EAAW,WAAaZ,CAGjG,OAFAF,GAAcC,EAAKC,EAAMa,GAElBd,EAGT,QAASe,GAAUC,EAAQC,GACzB,GAAIC,KAUJ,OAJAC,QAAOC,KAAKH,GAAQI,QAAQ,SAAUC,GACpCJ,EAAOI,GAAkC,kBAAlBL,GAAOK,GAAwBL,EAAOK,GAAOC,KAAKP,GAAUC,EAAOK,KAGrFJ,EAGT,QAASM,GAAYP,EAAQQ,GAC3B,MAAO,IAAIC,SAAQ,SAAUC,EAASC,GACpC,GAAIC,GAAYd,EAAUC,OAAQC,GAC9Ba,EAAqBL,GAAWA,EAAQI,EAAU5B,MAClD8B,EAASD,EAAqBL,EAAQI,EAAU5B,MAAQQ,CAE5D,OAAOkB,GAAQI,EAAOF,MAlD1B,GAAIG,GAAc,mBACdC,EAAgB,KAEhBnB,GACFX,MAAO,QACPE,KAAM,OACNE,KAAM,OACND,QAAS,WAGP4B,GACFC,iBAAkBH,EAAc,8BAiE9BnC,GACFI,KAAMa,EACNsB,aAAcH,EACdhB,QACEhB,KAAMa,EAAKP,KACX8B,QAAS,KAEXC,WAAW,EACXC,KAAM,SAActB,GAClB,GAAIuB,GAAQ1C,IAQZ,OAAO,IAAI4B,SAAQ,SAAUC,EAASC,GACpC,GAAIa,KAIJ,OAHAtB,QAAOuB,OAAOD,EAAWD,EAAMvB,QAC/BE,OAAOuB,OAAOD,EAAWxB,GAElBO,EAAYiB,EAAWD,EAAMf,SAASkB,KAAK,SAAUC,GAC1DjB,EAAQiB,QAIdC,QAAS,aAGTC,QAAS,SAAiBC,GACJC,UAAUC,OAAS,GAAsBC,SAAjBF,UAAU,GAAmBA,UAAU,KAEnF,IAAIlD,KAAKwC,UAAW,KAAMlC,SAAQD,MAAM+B,EAASC,iBASjDrC,MAAKwC,WAAY,GAOrB,OAHsB,mBAAXa,SAA0BA,OAAOJ,KAC1CI,OAAOJ,IAAIK,IAAIvD,GAEVA","file":"vue-notifications.es5.min.js","sourcesContent":[";(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.VueNotifications = factory();\n  }\n}(this, function() {\n'use strict';\n\nvar PLUGIN_NAME = 'VueNotifications';\nvar PROPERTY_NAME = '$n';\n\nvar TYPE = {\n  error: 'error',\n  warn: 'warn',\n  info: 'info',\n  success: 'success'\n};\n\nvar MESSAGES = {\n  alreadyInstalled: PLUGIN_NAME + ': plugin already installed'\n};\n\nfunction showInConsole(msg, type, types) {\n  if (type === types.error) console.error(msg);else if (type === types.warn) console.warn(msg);else if (type === types.success) console.info(msg);else console.log(msg);\n}\n\nfunction showDefaultMessage(_ref) {\n  var type = _ref.type,\n      message = _ref.message,\n      title = _ref.title,\n      debugMsg = _ref.debugMsg;\n\n  var msg = 'Title: ' + title + ', Message: ' + message + ', DebugMsg: ' + debugMsg + ', type: ' + type;\n  showInConsole(msg, type, TYPE);\n\n  return msg;\n}\n\nfunction getValues(vueApp, config) {\n  var result = {};\n\n  // TODO (S.Panfilov) if {} we have to build object that extend properties from parents\n  // TODO (S.Panfilov) if func - pass function\n  // TODO (S.Panfilov) if string - pass {msg: 'string'} and etend from upper properties\n\n  Object.keys(config).forEach(function (field) {\n    result[field] = typeof config[field] === 'function' ? config[field].call(vueApp) : config[field];\n  });\n\n  return result;\n}\n\nfunction showMessage(config, options) {\n  return new Promise(function (resolve, reject) {\n    var valuesObj = getValues(vueApp, config);\n    var isMethodOverridden = options && options[valuesObj.type];\n    var method = isMethodOverridden ? options[valuesObj.type] : showDefaultMessage;\n\n    return resolve(method(valuesObj));\n  });\n}\n\n// function initVueNotificationPlugin (vueApp, notifications, pluginOptions) {\n//   if (!notifications) return\n//   Object.keys(notifications).forEach(name => {\n//     setMethod(vueApp, name, vueApp.$options, pluginOptions)\n//   })\n//\n//   vueApp.$emit(`${PACKAGE_NAME}-initiated`)\n// }\n\n// function unlinkVueNotificationPlugin (vueApp, notifications) {\n//   if (!notifications) return\n//   const attachedMethods = vueApp.$options.methods\n//   Object.keys(notifications).forEach(name => {\n//     if (attachedMethods[name]) {\n//       attachedMethods[name] = undefined\n//       delete attachedMethods[name]\n//     }\n//   })\n//\n//   vueApp.$emit(`${PACKAGE_NAME}-unlinked`)\n// }\n\nvar VueNotifications = {\n  type: TYPE,\n  propertyName: PROPERTY_NAME,\n  config: {\n    type: TYPE.info,\n    timeout: 3000\n  },\n  installed: false,\n  show: function show(config) {\n    var _this = this;\n\n    // TODO (S.Panfilov) config has to be an Object\n    // TODO (S.Panfilov) add Promise for async reasons\n    //example 1: this.$n.show(this.$n.login.success)\n    //example 2: this.$n.show(this.$n.error.login)\n    //example 3: this.$n.show({msg: 'asdasd'})\n\n    return new Promise(function (resolve, reject) {\n      var newConfig = {};\n      Object.assign(newConfig, _this.config); // TODO (S.Panfilov) make sure that \"this === VueNotifications\"\n      Object.assign(newConfig, config);\n\n      return showMessage(newConfig, _this.options).then(function (resp) {\n        resolve(resp);\n      });\n    });\n  },\n  dismiss: function dismiss() {\n    // TODO (S.Panfilov) required for timeout 0\n  },\n  install: function install(Vue) {\n    var pluginOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (this.installed) throw console.error(MESSAGES.alreadyInstalled);\n\n    // TODO (S.Panfilov)check if it's necessary\n    //this.// const mixin = makeMixin(Vue, pluginOptions)\n    // Vue.mixin(mixin)\n\n    // addMethods(this, this.type, pluginOptions)\n\n\n    this.installed = true;\n  }\n};\n\nif (typeof window !== 'undefined' && window.Vue) {\n  window.Vue.use(VueNotifications);\n}\nreturn VueNotifications;\n}));\n"]}